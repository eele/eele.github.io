# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
  - build-hexo
  - build-image
  - deploy


.dockerfile : &dockerfile |
  FROM docker.io/library/nginx:1.25.3-bookworm
  USER root
  COPY $build_target_path /usr/share/nginx/html
  WORKDIR /usr/share/nginx/html

.kube_yaml : &kube_yaml |
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: $deployment_name
    namespace: $namespace
  spec:
    replicas: $replicas
    minReadySeconds : 30
    selector:
      matchLabels:
        app: $service_name
    template:
      metadata:
        labels:
          app: $service_name
      spec:
        containers:
          - name: $deployment_name
            image: $image_address
            ports:
              - containerPort: $container_port
                name: springboot
            resources :
              requests :
                cpu : $request_cpu
                memory : $request_mem
              limits:
                cpu : $limit_cpu
                memory : $limit_mem
            env :
              - name: CLASSNAME
                value: $class_name
              - name: JVMOPT
                value: $jvm_opt
              - name: JAVAOPT
                value: $java_opt
            livenessProbe:
              periodSeconds: 20
              timeoutSeconds: 2
              failureThreshold: 5
              initialDelaySeconds: 60
              httpGet:
                path: /actuator
                port: $container_port
            readinessProbe:
              periodSeconds: 20
              timeoutSeconds: 2
              failureThreshold: 3
              httpGet:
                path: /actuator
                port: $container_port
        terminationGracePeriodSeconds: 30
    strategy :
      type : RollingUpdate
      rollingUpdate :
        maxUnavailable : 0
        maxSurge : 1

  ---

  apiVersion: v1
  kind: Service
  metadata:
    name: $service_name
    namespace: $namespace
  spec:
    ports:
      - port: 80
        targetPort: $container_port
        name: webapp-service-port
        protocol: TCP
    selector:
      app: $service_name

.variables: &vars
  dockerfile: *dockerfile
  kube_yaml: *kube_yaml
  namespace : bluebox
  deployment_name : one-byte-art
  service_name : one-byte-art
  build_target_path : public
  image_address: harbor.byte.art/bluebox/one-byte-art:${CI_COMMIT_SHA}
  replicas : 1
  container_port : 80
  request_cpu: "100m"
  request_mem: "64Mi"
  limit_cpu: "100m"
  limit_mem: "128Mi"


build-hexo:
  stage: build-hexo
  variables:
    << : *vars
  image: docker.io/library/node:21.1.0-bullseye-slim
  cache:
    paths:
      - node_modules/
  before_script:
    - npm install hexo-cli -g
    - npm install
  artifacts:
     paths:
       - $build_target_path
     expire_in: 1 hour
  script: |
    cd ${CI_PROJECT_DIR}
    hexo generate
  only :
    - main

build-image:
  stage: build-image
  variables:
    << : *vars
  image:
    name: baseten/kaniko-executor:v1.9.1-debug-zstd
    entrypoint: [""]
  artifacts:
     paths:
       - $build_target_path
     expire_in: 1 hour
  script: |
    cd ${CI_PROJECT_DIR}/$build_target_path
    echo "$dockerfile" > ${CI_PROJECT_DIR}/Dockerfile
    echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    /kaniko/executor \
      --context "${CI_PROJECT_DIR}" \
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile" \
      --destination "$image_address"
  only :
    - main

deploy:
  stage: deploy
  variables:
    << : *vars
  image:
    name: harbor.byte.art/bluebox/kubectl:c2ec51e4d1ff52b94308223cce05d14d01c5e9bd
    entrypoint: [""]
  script:
    - echo "$kube_yaml" > ${CI_PROJECT_DIR}/deploy.yaml
    - kubectl apply -f ${CI_PROJECT_DIR}/deploy.yaml
  only :
    - main

#include:
#  - template: Security/SAST.gitlab-ci.yml
